name: Build and Publish

on:
  # run it on push to the default repository branch
  push:
    branches: [main,test-pull-request]
  # run it during pull request
  pull_request:
    branches: [main]
jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    outputs:
      output: ${{ steps.version.outputs.date }}
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # # setup Docker buld action
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v2
    #   - name: Create env for django app
    #     run: |
    #           cat <<-EOF > .env
    #           DB_HOST=${{ secrets.DB_HOST }}
    #           DB_USER=${{ secrets.DB_USER }}
    #           DB_NAME=${{ secrets.DB_NAME}}
    #           DB_PASS=${{ secrets.DB_PASS }}
    #           CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}
    #           REDIS_URL=${{ secrets.REDIS_URL }}
    #           EOF

    #   - name: Run Trivy vulnerability scanner
    #     if: github.ref == 'refs/heads/test-pull-request'
    #     uses: aquasecurity/trivy-action@master
    #     with:
    #       scan-type: 'repo'
    #       scan-ref: .
    #       format: 'table'
    #       exit-code: '1'
    #       ignore-unfixed: true
    #       vuln-type: '*'
    #       severity: 'CRITICAL,HIGH'

      - name: Login to DockerHub
        if: github.event.pull_request.base.ref == 'main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Get current date
        id: version
        run: echo "date=$(date +'%Y-%m-%d-%s')" >> $GITHUB_OUTPUT

      - name: Build image and push to Docker Hub
        if: github.event.pull_request.base.ref == 'main'
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          # Note: tags has to be all lower-case
          tags: |
             billions119/enet:${{ steps.version.outputs.date }}
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}